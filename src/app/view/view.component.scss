.service-chip {
  width: max-content;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.services-container {
  width: 100%;
}

.full-width {
  width: 100%;
}

.chip-text {
  line-height: 1.5;
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.round-button {
  border-radius: 50%;
  aspect-ratio: 1;
  border: solid 1px red;
}

.first-item {
  order: -1;
}
.chips-container {
  display: flex;
  flex-wrap: wrap;
}

.custom-col {
  flex: 0 0 calc(100% / 7);
}

::ng-deep .p-datatable .p-datatable-tbody > tr > td {
  border: none;
}

.center-container {
  width: 100%;
  display: flex;
  justify-content: center;
  justify-items: center;
}

.tag {
  background: var(--primary-700);
  color: #ffffff;
  font-size: 0.75rem;
  font-weight: 700;
  padding: 0.25rem 0.1rem;
  border-radius: 3px;
}

.centered-multiline-text {
  display: block;
  text-align: center;
  white-space: pre;
  line-height: 1.2; /* Adjust line height as needed */
  max-width: 100%; /* Adjust maximum width as needed */
  max-height: 3.6em; /* Adjust maximum height to allow for 3 lines */
  overflow: hidden;
  text-overflow: ellipsis; /* Optional: Ellipsis for overflow */
}

.pointer-on-hover {
  cursor: pointer;
}

.profile-picture {
  object-fit: cover;
  display: block;
  aspect-ratio: 1 / 1;
}

.grid-img {
  object-fit: cover;
  display: block;
  aspect-ratio: 1 / 1;
}

.display-image {
  height: auto; /* Ensures the image maintains its aspect ratio */
  width: 100%; /* Sets the width to 100% of its parent container */
  max-width: 80vw; /* Limits the maximum width of the image */
  max-height: 80vh;
  display: block;
  object-fit: contain; /* Ensures the entire image is visible without cropping */
}

.image-container {
  width: 100%;
  height: 100%;
  position: relative; /* Required for the positioning of the pseudo-element */
  display: inline-block; /* Or 'block', depending on your layout needs */
  cursor: pointer; /* Changes the cursor to a pointer to indicate interactivity */
}

.image-container img {
  display: block; /* Removes bottom margin/spacing */
  width: 100%; /* Makes the image fill the container */
  height: auto; /* Keeps the image aspect ratio */
}

.image-container::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  box-shadow: 0 9px 18px rgba(0, 0, 0, 0.586); /* Increased blur radius and spread radius */
  z-index: 1;
}

.image-container::before {
  content: ""; /* Required for a pseudo-element */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5); /* Black with 50% opacity */
  opacity: 0; /* The overlay is initially fully transparent */
  transition: opacity 0.3s ease; /* Smooth transition for the overlay */
}

.image-container:hover::before {
  opacity: 1; /* On hover, the overlay becomes visible */
}

.horizontal-screen-width {
  max-width: 100vw !important;
}
